全球資訊網（英語：World Wide Web）亦作WWW、Web，是一個透過網際網路存取的，由許多互相連結的超文字組成的系統[1]。英國科學家提姆·柏內茲-李於1989年發明了全球資訊網。1990年他在瑞士CERN的工作期間編寫了第一個網頁瀏覽器[2][3]。網頁瀏覽器於1991年在CERN以外發行，1991年1月最先向其他研究機構發行，並於1991年8月在網際網路上向公眾開放。

全球資訊網是資訊時代發展的核心，也是數十億人在網際網路上進行互動的主要工具[4][5][6]。網頁主要是文字檔案格式化和超文件標示語言（HTML）。除了格式化文字之外，網頁還可能包含圖片、影片、聲音和軟體元件，這些元件會在使用者的網頁瀏覽器中呈現為多媒體內容的連貫頁面。

全球資訊網並不等同網際網路，全球資訊網只是網際網路所能提供的服務其中之一，是靠著網際網路運行的一項服務。

全球資訊網最早的構想可以追溯到1980年提姆·柏內茲-李構建的ENQUIRE專案。這是一個類似維基百科的超文字線上編輯資料庫。儘管這與我們現在使用的全球資訊網大不相同，但是它們有許多相同的核心思想，甚至還包括一些柏內茲-李的全球資訊網之後的下一個專案語意網中的構想。

1989年3月，柏內茲.李撰寫了《關於資訊化管理的建議》一文，文中提及ENQUIRE並且描述了一個更加精巧的管理模型[7]。1990年11月12日他和羅伯特·卡里奧合作提出了一個更加正式的關於全球資訊網的建議[8]。在1990年11月13日他在一台NeXT工作站上寫了第一個網頁以實現他文中的想法[9]。

在那年的聖誕節，柏內茲-李製作了要讓網路工作的所有必要工具[10]：第一個網頁瀏覽器WorldWideWeb（同時也是網頁編輯器）和第一個網頁伺服器。

1991年8月6日，他在alt.hypertext新聞群組上貼了全球資訊網專案簡介的文章[11]。這一天也標誌著網際網路上全球資訊網公共服務的首次亮相。

全球資訊網中至關重要的概念─超文字，起源於1960年代的幾個從前的專案。譬如泰德·尼爾森的仙那度計劃（英語：Project Xanadu）和道格拉斯·英格巴特的NLS（英語：NLS (computer system)）。而這兩個專案的靈感都是來源於萬尼瓦爾·布希在其1945年的論文《和我們想得一樣》中為微縮膠片設計的Memex（英語：Memex）系統。

提姆·柏內茲-李的另一個才華橫溢的突破是將超文字嫁接到網際網路上。在他的《一千零一網》一書中解釋，他曾多次向技術社群的成員暗示這兩種技術結合是可行的，但是卻沒有任何人接受他的建議，他最後只好自己解決了這個計劃。他發明了三項關鍵技術：

全球資訊網和其他超文字系統有很多不同之處。全球資訊網上需要單項連接而不是雙向連接，這使得任何人可以在資源擁有者不作任何行動情況下連結該資源。和早期的網路系統相比，這一點對於減少實現網路伺服器和網路瀏覽器的困難至關重要，但它的副作用是產生了連結失效（英語：Link rot）的慢性問題。全球資訊網不像某些應用軟體如HyperCard，它不是私有的，這使得伺服器和客戶端能夠獨立地發展和擴充，而不受許可限制。

1993年4月30日，歐洲核子研究組織宣布全球資訊網對任何人免費開放，並不收取任何費用[13]。兩個月之後Gopher協定宣布不再是免費使用，造成大量使用者從Gopher轉向全球資訊網。早期流行的網頁瀏覽器是用於Unix和X Windows系統的ViolaWWW。

學者普遍認為，全球資訊網的一個轉折點始於1993年推出的Mosaic網頁瀏覽器[14][15]，這是由伊利諾大學厄巴納-香檳分校（NCSA-UIUC）的國家超級電腦應用中心團隊所開發的圖形介面瀏覽器，由馬克·安德森領導。Mosaic的資金來自美國高速運算及通訊計劃（High-Performance Computing and Communications Initiative）和高速運算及通訊法案（High Performance Computing and Communication Act of 1991），這是美國參議員艾爾·高爾所發起的幾項運算發展計劃（英語：Al Gore and information technology）之一[16]。在Mosaic發布之前，網頁中的圖片和文字混合並不常見，全球資訊網的受歡迎程度遠低於網際網路上使用的舊協定，例如Gopher和WAIS。Mosaic的圖形使用介面讓全球資訊網成為迄今為止最受歡迎的網際網路協定。

1994年10月，全球資訊網協會（W3C）在麻省理工學院電腦科學實驗室成立，建立者是全球資訊網的發明者提姆·柏內茲-李。到了1994年底，全球網站數量仍然相對稀少，但是很多著名網站（英語：List of websites founded before 1995）已經相當活躍，這些網站已經預示或者啟發了當今最流行的服務。

透過網際網路，世界各地都建立了其他網站。這促進了協定和格式化的國際標準發展。柏內茲-李繼續參與指導全球資訊網標準的開發，例如編寫網頁的標記式語言和他提倡的語義網願景。全球資訊網透過一種易於使用和靈活的格式，使資訊在網際網路上傳播。因此，全球資訊網對於網際網路的普及發揮了重要的作用[17]。雖然這兩個詞語有時被混在一起使用，但全球資訊網並不是網際網路的同義詞[18]。全球資訊網是一個資訊空間（英語：Information space），包含超連結文件和其他資源，由其URIs標識[19]。它使用網際網路協定如TCP/IP和HTTP實作為客戶端和伺服器端軟體。

網際網路和全球資訊網這兩個名詞經常被混用。然而，這兩個名詞的意思並不相同。網際網路是一個全球互相連接的電腦網路系統。相較之下，全球資訊網是由超連結和統一資源標誌符連接的檔案和其他資源的全球集合。全球資訊網資源通常使用HTTP或HTTPS存取，是網際網路通訊協定的其中之一[20]。

若要進入全球資訊網上一個網頁，或者其他網路資源的時候，通常需瀏覽器上鍵入你想存取網頁的統一資源定位符（URL），或者通過超連結方式連結到那個網頁或網路資源。這之後的工作首先是URL的伺服器名部分，被名為域名系統的分布於全球的網際網路資料庫解析，並根據解析結果決定進入哪一個IP位址（IP Address）。

接下來的步驟是為所要存取的網頁，向在那個IP位址工作的伺服器傳送一個HTTP請求。在通常情況下，HTML文字、圖片和構成該網頁的一切其他檔案很快會被逐一請求並行送回使用者。

網路瀏覽器接下來的工作是把HTML、CSS和其他接受到的檔案所描述的內容，加上圖像、連結和其他必須的資源，顯示給使用者。這些就構成了你所看到的「網頁」。

大多數的網頁自身包含有超連結指向其他相關網頁，可能還有下載、源文獻、定義和其他網路資源。像這樣通過超連結，把有用的相關資源組織在一起的集合，就形成了一個所謂的資訊的「網」。這個網在網際網路上被方便使用，就構成了最早在1990年代初提姆·柏內茲-李所說的全球資訊網[21][22]。

網路獨立於大眾傳媒而被大家使用。如果你要發布一個網頁，你不需要去拜訪出版商或者任何其他傳媒機構，而且你潛在的讀者可能遍布於世界各地。

與傳統書籍文獻不同，超文字沒有一個線性的順序從頭到尾。它不能分解成章，節，段等層次。

現在在全球資訊網上可以尋找到不同種類的資訊，你想了解其他的國家以及那裡的風土人情變得十分容易。當你在外國或者一個偏僻的小鎮旅遊的時候，你可以通過網路找到關於這個地方的資訊，尤其是如果是在一個已開發國家的話。當地的報紙，官方出版物和其他資料都可以非常容易找到，因此你可以通過網路找到更多種類的相關資訊。

儘管有些站點有多種語言的版本，但是大部分站點只有當地語言版本。而且，不是所有的軟體都能很好地支援所有的特殊字元和那些從右向左寫的語言（如阿拉伯語或希伯來語）。這些因素使得關於全球資訊網讓地球融為地球村的觀點受到挑戰。

隨著大量的免費網路首頁伺服器的出現，湧現出了無數的個人首頁以及家庭首頁，小商店的首頁等等，在網路上發布資料顯而易見地越來越容易。

JavaScript是一種處理網頁的手稿語言。其標準版本是ECMAScript[23]，由網景通訊公司提交給歐洲標準協會制訂。儘管它的名字和Java類似，但是它是由網景公司開發的而不是由昇陽電腦公司開發的，除了兩者的語法都是從C語言發展而來這一點外，它們之間幾乎沒有什麼關係。之所以叫JavaScript，只是當時網景公司希望能藉助Java的名氣推廣它。和Java一樣，JavaScript類似C++是一種支援物件導向的程式設計的語言，和C++相同的是它允許混合代碼，即物件導向的和基於過程的代碼可以同時存在。由於網頁瀏覽器中，JavaScript與文件物件模型（Document Object Model）緊密結合，能夠很好地處理網頁，使得它比它的作者原本預期的要有用得多。它的用途可以用術語DHTML（動態HTML）表達，以強調它和靜態HTML網頁的區別。

儘管英文單字「worldwide」通常被寫為一個詞（沒有空格或者連字元），全稱「World Wide Web」和其簡稱「WWW」現在在一些正規的英文中也被廣泛使用。最早的文獻談到全球資訊網稱其為「WorldWideWeb」（為一駝峰式大小寫）或者「World-Wide Web」（加了連字元，這樣這個版本的名字最接近正式的英語用法）。有趣的是，「WWW」成為了英文中少數的簡稱的音節比本來名字的音節更長的簡稱。在英語裡，「World Wide Web」共三個音節，而單單一個W字母就有三個音節。

1994年6月，在北美留學的一名中國地理學家李小文（後來成為中國科學院院士）於中國新聞電腦網路（CND）的電子出版物《華夏文摘》上首次將「World Wide Web」稱為「萬維天羅地網」，簡稱「萬維網」[24]，這樣其中文名稱漢語拼音也是以WWW開始，自此「萬維網」這一名稱在中國開始被廣泛採用。

全球資訊網的核心部分是由三個標準構成的：

提姆·柏內茲-李現在是全球資訊網協會（W3C）的領導人，這個組織的作用是使電腦能夠在全球資訊網上不同形式的資訊間更有效的儲存和通信。

據2001年一份研究表明，全球資訊網上有超過5500億份文件，大多數檔案在不可見的「深網」[25]。2002年一份通過20億2千4百萬網頁調查[26] 表明至今大多數的網頁內容是用英語寫成的，為56.4%；之後是德語（7.7%），法語（5.6%）和日語（4.9%）。但是中文站點的增長也很快。一份最近的研究通過在75種語言的網路調查取樣表明，到2005年1月為止，有超過115億個網頁在公共索引頁面中[27]。

由於網際網路的基礎結構的缺陷，造成的問題和顯現為瀏覽速度的減慢的延遲，經常讓人很煩。知名網站techweb甚至因此戲稱全球資訊網應改成World Wide Wait（全球等）[28]。利用點對點技術和服務品質來提高網際網路的速度的討論一直在進行。其他解決方案也可以在W3C頁面存檔備份，存於網際網路檔案館的網站上找到。

和WWW有關的主要學術會議為IW3C2頁面存檔備份，存於網際網路檔案館。發起的全球資訊網系列會議。這是有關這一系列會議的連結頁面存檔備份，存於網際網路檔案館

2019年3月12日，Google更改Google doodle，以紀念全球資訊網發明30周年。[29]
網路機器人（英語：Internet Bot）是指一類在網際網路上執行的軟體，該軟體使用自動化的指令碼執行大量簡單任務，能夠高效完成人類短時間內難以完成的任務。其中，最為常見的一種機器人是網路爬蟲機器人，該機器人可通過抓取網頁上的資訊來達到資訊索引（英語：Search engine indexing）的目的。目前，網際網路上過半的流量來自網路機器人。[1]

有的伺服器會利用robots.txt檔案來阻止機器人存取，也有的利用驗證碼等技術來確保存取者是真人。
網路搜尋引擎（英語：web search engine）是設計在全球資訊網上進行搜尋，意思是指自動從全球資訊網搜集特定的資訊，提供給使用者進行查詢的系統。

搜尋結果通常會以行列式的連結展示，亦稱為搜尋結果頁 (Search engine results page，SERP)。這些訊息連結可能是連至網頁、圖像、影片、資訊圖表、文章、研究論文或其他類型的檔案。 一些搜尋引擎亦會在其他的資料庫或目錄中搜尋可用數據。與依靠人工維持的網站目錄不同，搜尋引擎進行的實時搜尋，是以網路爬蟲 (web crawler)進行運行演算法得出來。而沒法被搜尋出來的是稱為深網 (deep web)。

搜尋引擎的工作原理大致可以分為：

整理資訊及接受查詢的過程，大量應用了文字資訊檢索技術，並根據網路超文字的特點，引入了更多的資訊。

1990年初當時全球資訊網還未出現，為了查詢散布在各個分散的主機中的檔案，曾有過Archie、Gopher等搜尋工具，隨著網際網路的迅速發展，基於HTTP存取的web技術的迅速普及，他們就不再能適應使用者的需要。在1994年1月，第一個既可搜尋又可瀏覽的分類目錄EINet Galaxy（Tradewave Galaxy）上線，它還支援Gopher和Telnet搜尋。同年4月，Yahoo目錄誕生，隨著存取量和收錄鏈結數的增長，開始支援簡單的資料庫查詢。這就是我們說的早期的目錄導航系統，他們的缺點是網站收錄/更新都要靠人工維護，所以在資訊量劇增的條件下，就不是非常受用了。

1994年7月，Lycos推出了基於robot的數據發掘技術，並支援搜尋結果相關性排序，並且他第一個開始在搜尋結果中使用了網頁自動摘要。Infoseek也是同時期的一個重要代表，他們是搜索引擎史上一個重要的進步。

1995年全球第一個華文搜尋引擎蕃薯藤於台灣成立。

1995年，一種新的搜尋引擎工具出現了——中介搜尋引擎（Meta Search Engine）或稱為元搜尋引擎，第一個中介搜尋引擎是華盛頓大學的學生開發的Metacrawler。使用者只需提交一次搜尋請求，由中介搜尋引擎負責轉換處理後提交給多個預先選定的獨立搜尋引擎，並將從各獨立搜尋引擎返回的所有查詢結果，集中起來處理後再返回給使用者。

1995年12月才登場亮相的AltaVista推出了大量的創新功能使它迅速到達當時搜尋引擎的頂峰，它第一個支援自然語言搜尋的搜尋引擎，具備了基於網頁內容分析，智慧型處理的能力，第一個實現高級搜尋語法的搜尋引擎（如AND、OR、NOT等），同時AltaVista還支援搜尋新聞群組，搜尋圖片等具有劃時代意義的功能。同時期還有inktomi、HotBot等搜尋引擎。

1997年8月Northernlight公司正式推出搜尋引擎，它第一個支援對搜尋結果進行簡單的自動分類，也是當時擁有最巨量資料庫的搜索引擎之一。

1998年台灣PChome的前身todo網站成立。

1998年10月，Google誕生。它是目前世界上最流行的搜尋引擎之一，具備很多獨特而且優秀的功能，並且在介面等實現了革命性創新。

1999年5月，Fast (Alltheweb)公司發布了自己的搜尋引擎AllTheWeb，它的網頁搜尋可利用ODP自動分類，支援Flash和pdf搜尋，支援多語言搜尋，還提供新聞搜尋、圖像搜尋、影片、MP3、和FTP搜尋，擁有極其強大的高級搜尋功能。它曾經是最流行的搜尋引擎之一，後在2003年2月被Overture收購。

在中文搜尋引擎領域，1996年8月成立的搜狐公司是最早參與作網路資訊分類導航的網站，曾一度自詡「出門找地圖，上網找搜狐」的誇大廣告詞。由於其人工分類提交的局限性，隨著網路資訊的暴增，逐漸被基於robot自動抓取智慧型分類的新一代資訊技術取代。

台灣中正大學吳昇教授所領導的GAIS實驗室1998年1月創立了Openfind中文搜尋引擎，是最早開發的中文智慧型搜尋引擎，採用GAIS實驗室推出多元排序（PolyRankTM）核心技術，截止2002年6月，宣布累計抓取網頁35億，開始進入英文搜尋領域。

北大天網是教育網最流行的搜尋引擎，它由北大計算機系網路與分布式系統研究室開發，於1997年10月29日正式在CERNET上提供服務，2000年初成立天網搜尋引擎新課題組，由國家973重點基礎研究發展規劃項目基金資助開發，收錄網頁約6000萬，利用教育網優勢，有強大的ftp搜尋功能。

百度中文搜尋由超鏈分析專利發明人、前Infoseek資深工程師李彥宏和好友徐勇2000年1月建立，目前支援網頁資訊檢索，圖片，Flash，音樂等多媒體資訊的檢索。並且百度在中文領域第一個開始使用ppc經營模式。

2002年開始很多公司受搜尋市場前景和Google神話的吸引，積極進入搜尋引擎市場，謀求一席之地。但是不幸的是他們當中很多公司尤其是不少中國公司採用流氓手段進行自己搜尋引擎的推廣工作，常用的手段是瀏覽器劫持、惡意捆綁adware/spyware等等，比較惡劣的典型公司是中搜、3721等等。中搜是由慧聰國際主持開發的，自稱是搜尋領域的後起之秀。目前處於起步階段，但是採用流氓軟體手段推廣後，強佔了不少使用者的搜尋引擎選擇。2003年年底慧聰搜尋改名為中國搜尋，推出第三代智慧型搜尋引擎。中國搜尋主推桌面搜尋——網路豬，是備受爭議的流氓軟體之一。

2003年11月，Yahoo全資收購3721公司。2005年8月，阿里巴巴和Yahoo達成戰略合作，全資收購雅虎中國，並更名為阿里巴巴雅虎，並將其業務重點全面轉向搜尋領域。

2004年8月3日，搜狐公司推出中文搜尋引擎搜狗。

2006年9月，微軟公司正式推出了擁有自主研發技術的Live Search，宣布進軍搜尋引擎市場，挑戰Google在網路搜尋領域的霸主地位。

2006年12月，網易公司推出中文搜尋引擎有道。

2009年6月1日，微軟正式上線原名為Kumo的搜尋引擎Bing，中文名「必應」，但是由於不久後的「六四事件」20週年，Bing只在中國上線了1天即被防火長城封鎖，6月6日，Bing解封。

2009年11月，微軟學術搜尋Microsoft Academic Search beta版啟用，該搜尋引擎目前主要提供計算機學科及相關領域的學術論文、作者、會議和學術期刊。

2016年12月,LinAsk!恆問推出LinAsk!恆問搜尋引擎。

2017年4月,LinAsk!恆問推出應搜搜尋引擎。

搜尋引擎按其工作方式主要可分為三種，分別是全文搜尋引擎（Full Text Search Engine）、垂直搜尋引擎（Vertical Search Engine）和元搜尋引擎（Meta Search Engine）。

搜尋引擎的商務是一種新的商業模式，在中國大陸還有很多人用網址大全去尋找商業平台網站的時候，搜尋引擎行銷的方式慢慢的興起，越來越多的買家又或賣家通過搜尋引擎來尋找自己的需要。直至2019年9月，Google是全球最多人使用的搜尋引擎，佔有市場92.96%。Google以其優秀的搜尋演算法，不被競價排名所籠罩的搜尋引擎。

東南亞和俄羅斯

在一些東南亞國家和俄羅斯，Google並不是最多人使用的搜尋引擎。

在俄羅斯，Yandex 擁有61.9%市場佔有率，而Google只有28.3%。在中國，百度是最受歡迎的搜尋引擎。而在南韓，Naver的佔有率達70%。在日本和台灣，雅虎是最多人使用的搜尋引擎。

歐洲

大部分西方國家最多人使用的搜尋引擎是Google。在捷克，Google並不是最多人使用的搜尋引擎，Seznam.cz 也擁有不少支持者。

隨著網際網路的發展，網上可以搜尋的網頁變得愈來愈多，而網頁內容的品質亦變得良莠不齊，沒有保證。所以，未來的搜尋引擎將會朝著知識型搜尋引擎的方向發展，期以為搜尋者提供更準確及適用的資料。目前，網上的百科全書如雨後春筍般發展起來；另一方面，近年來亦有不少公司嘗試在搜尋方面改進，務求更符合使用者的要求。當中諸如Copernic Agent之類的搜尋代理就是其中之一。

2013年6月25日，美國聯邦交易委員會發布新版的消費者保護命令，要求搜尋引擎必須要能夠明顯區分出搜尋結果及廣告。[2]
搜尋引擎（英語：search engine）是一種資訊檢索系統，旨在協助搜尋儲存在電腦系統中的資訊。搜尋結果一般被稱為「hits」，通常會以表單的形式列出。網路搜尋引擎是最常見、公開的一種搜尋引擎，其功能為搜尋全球資訊網上儲存的資訊。

搜尋引擎為一組專案提供了一個介面，使使用者能夠指定關於感興趣的專案的標準，並讓引擎找到匹配的專案，這些標準稱為搜尋查詢。在文字搜尋引擎的情況下，搜尋查詢通常表示為辨識一個或多個文件可能包含的期望概念的一組單詞。[1]有多種樣式的搜尋查詢語法在嚴格性上有差異。它也可以在以前的站點中搜尋搜尋引擎中的名稱。而一些文字搜尋引擎要求使用者輸入由白色空格分隔的兩個或三個字，其他搜尋引擎可以使使用者能夠指定整個文件，圖片，聲音和各種形式的自然語言。一些搜尋引擎對搜尋查詢進行改進，以增加通過稱為查詢擴充的過程提供品質集合的可能性。查詢理解方法可用於標準化查詢語言。

基於索引的搜尋引擎符合查詢指定條件的專案列表通常會排序或排名。按相關性排列專案（從最高到最低）減少尋找所需資訊所需的時間。概率搜尋引擎根據相似性度量（每個專案和查詢之間，通常以1到0,1的比例最相似）和有時受歡迎程度或權限或使用相關性回饋來評估專案。布林搜尋引擎通常只返回匹配的專案，而不考慮訂單，為了提供根據一些標準快速排序的一組匹配專案，搜尋引擎通常將通過稱為索引的過程來收集關於所考慮的一組專案的元資料。索引通常需要較少量的電腦儲存，這就是為什麼一些搜尋引擎僅儲存索引的資訊而不是每個專案的完整內容，而是提供導航到搜尋引擎結果頁面中的專案的方法。或者，搜尋引擎可以將每個專案的副本儲存在高速緩衝記憶體中，使得使用者可以在索引時或為了歸檔目的看到該專案的狀態，或者使得重複的行程更有效和更快地工作。其他類型的搜尋引擎不儲存索引。抓取器或蜘蛛型搜尋引擎（也稱為即時搜尋引擎）可以在搜尋查詢時收集和評估專案，基於起始專案的內容（稱為種子或種子URL）動態考慮附加專案網際網路爬蟲的情況）。元搜尋引擎既不儲存索引也不儲存快取，而只是重新使用一個或多個其他搜尋引擎的索引或結果來提供聚合的最終結果集。


robots.txt（統一小寫）是一種存放於網站根目錄下的ASCII編碼的文字檔案，它通常告訴網路搜尋引擎的漫遊器（又稱網路蜘蛛），此網站中的哪些內容是不應被搜尋引擎的漫遊器取得的，哪些是可以被漫遊器取得的。因為一些系統中的URL是大小寫敏感的，所以robots.txt的檔名應統一為小寫。robots.txt應放置於網站的根目錄下。如果想單獨定義搜尋引擎的漫遊器造訪子目錄時的行為，那麼可以將自訂的設定合併到根目錄下的robots.txt，或者使用robots元資料（Metadata，又稱元資料）。

robots.txt協定並不是一個規範，而只是約定俗成的，所以並不能保證網站的隱私。注意robots.txt是用字串比較來確定是否取得URL，所以目錄末尾有與沒有斜槓「/」表示的是不同的URL。robots.txt允許使用類似"Disallow: *.gif"這樣的萬用字元[1][2]。

其他的影響搜尋引擎的行為的方法包括使用robots元資料：

這個協定也不是一個規範，而只是約定俗成的，有些搜尋引擎會遵守這一規範，有些則不然。通常搜尋引擎會辨識這個元資料，不索引這個頁面，以及這個頁面的鏈出頁面。

允許所有的機器人：

另一寫法

僅允許特定的機器人：（name_spider用真實名字代替）

攔截所有的機器人：

禁止所有機器人造訪特定目錄：

僅禁止壞爬蟲造訪特定目錄（BadBot用真實的名字代替）：

禁止所有機器人造訪特定檔案類型[2]：

Sitemap指令被幾大搜尋引擎支援（包括Google、Yahoo、Bing和Ask），指定了網站Sitemaps檔案的位置。Sitemaps檔案包含了網站頁面所在的URL的一個列表。Sitemap指令並不受User-agent指令的限制，所以它可以放在robots.txt檔案中的任意位置。[3]
唯一要注意的就是要使用網站地圖指令，<sitemap_location>,並將URL的"location"值換成網站地圖的位址，例如，下面就是一個網站地圖指令的例子：

如何編寫Sitemaps檔案，請參考sitemaps.org頁面存檔備份，存於網際網路檔案館（英文）上的說明。

幾大抓取工具支援Crawl-delay參數，設定為多少秒，以等待同伺服器之間連續請求：[4][5]

一些大的Crawlers支援一項Allow指令，可以抵消先前Disallow指令。比如Googlebot。[6]

雖然robots.txt是最為廣泛接受的方法，但也可以與robots META標籤一起使用。robots META標籤主要是針對一個獨立的頁面設定，與其他的META標籤（如使用的語言、頁面的描述、關鍵詞等）一樣，robots META標籤也是放在頁面的HEAD標籤中，專門用來告訴搜尋引擎robots如何抓取該頁的內容。註
網站是指在全球資訊網上，根據一定的規則，使用HTML等工具製作的用於展示特定內容的相關網頁的集合。簡單地說，網站是一種通訊工具，就像布告欄一樣，人們可以通過網站來發布自己想要公開的資訊，或網站來提供相關的網路服務。人們可以通過網頁瀏覽器來存取網站，獲取自己需要的資訊或者享受網路服務。

許多公司都擁有自己的網站，他們利用網站來行宣傳、發布產品資訊、招聘等等。隨著網頁製作技術的流行，很多個人也開始製作個人主頁，這些通常是製作者用來自我介紹、展現個性的地方。也有以提供網路資訊為盈利手段的網路公司，通常這些公司的網站上提供人們生活各個方面的資訊如時事新聞、旅遊、娛樂、經濟等。

在全球資訊網的早期，網站還只能展示單純的文字。經過幾年的發展，圖像、聲音、動畫、影片，甚至3D圖形技術開始在全球資訊網上流行起來，網站也慢慢地發展成圖文並茂的外觀。通過動態網頁技術，使用者也可以與其他使用者或者網站管理者交流。也有一些網站提供電子郵件服務。

全球資訊網由英國CERN物理學家提姆·柏內茲-李於1990年創立[1]。1991年8月6日，提姆·柏內茲-李建立世界上第一個網站[2]。1993年4月30日，CERN宣布全球資訊網對任何人免費開放使用[3]。

網站有許多功能，可用於個人網站、商業網站、政府網站或非營利組織網站。網站可以是個人、企業或其他組織的運作，通常專門用於特定主題或目的。任何網站都可以包含指向任何其他網站的超連結。網站被編寫或轉換為超文件標示語言（HTML），並使用使用者代理的軟體存取。可以從任何大小以電腦和網際網路為基礎的裝置（包括桌上型電腦、筆記型電腦、平板電腦和智慧型手機）檢視或存取網頁。

網站代管在稱為網頁伺服器的電腦系統上，也稱為HTTP（超檔案傳輸協定）伺服器。網頁伺服器也可以指在這些系統上執行的軟體，它們回應來自網站使用者的請求來檢索和傳遞網頁。Apache HTTP Server是目前最常見的網頁伺服器軟體（根據Netcraft（英語：Netcraft）統計）， 微軟的IIS也是最常被使用的。一些替代品，如Nginx、Lighttpd、Hiawatha（英語：Hiawatha (web server)）或Cherokee，都是功能相當齊全和輕量化。
超連結（英語：Hyperlink）是指超文字內由一檔案連接至另一檔案的連結。作用與論文中的參考或注釋類似，以方便讀者隨時參考某一詞彙的定義。

超連結有點像是文學作品中的參考資料列表，它可以結合電腦網路和適當的存取協定來追蹤資料的原始出處，並被儲存、檢視，或顯示為關聯檔案中的一部份。

超連結中，最為通行的形式就是在全球資訊網上使用的URL。瀏覽器通常會用一些特殊的方式來顯示超連結。如不同的文字色彩、大小或樣式。而且，游標移動到超連結上時，也會轉變為手形指示出來。超連結在大部分的瀏覽器裡是顯示為加上底線的藍色字體，當這個連結已經被快取過時，則轉為紫色。當使用者觸發超連結時（例如，用滑鼠左鍵按下超連結），瀏覽器將會顯示出連結的目標。若目標並非HTML檔案時，將依其檔案格式以及瀏覽器自身之外掛程式而啟動外部程式以開啟檔案。
超文本標記語言（英語：HyperText Markup Language，簡稱：HTML）是一種用於建立網頁的標準標記語言。HTML是一種基礎技術，常與CSS、JavaScript一起被眾多網站用於設計網頁、網頁應用程式以及行動應用程式的使用者介面[3]。網頁瀏覽器可以讀取HTML檔案，並將其彩現成視覺化網頁。HTML描述了一個網站的結構語意隨著線索的呈現，使之成為一種標記語言而非程式語言。

HTML元素是構建網站的基石。HTML允許嵌入圖像與物件，並且可以用於建立互動式表單，它被用來結構化資訊——例如標題、段落和列表等等，也可用來在一定程度上描述文件的外觀和語意。HTML的語言形式為尖括號包圍的HTML元素（如<html>），瀏覽器使用HTML標籤和指令碼來詮釋網頁內容，但不會將它們顯示在頁面上。

HTML可以嵌入如JavaScript的手稿語言，它們會影響HTML網頁的行為。網頁瀏覽器也可以參照階層式樣式表（CSS）來定義文字和其它元素的外觀與布局。維護HTML和CSS標準的組織全球資訊網協會（W3C）鼓勵人們使用CSS替代一些用於表現的HTML元素[4]。

1980年，物理學家提姆·柏內茲-李在歐洲核子研究中心（CERN）在承包工程期間，為使CERN的研究人員使用並共享文件，他提出並建立原型系統ENQUIRE。1989年，柏內茲-李在一份備忘錄中提出一個基於網際網路的超文字系統[5]。他制定HTML並在1990年底寫出瀏覽器和伺服器軟體。同年，柏內茲-李與CERN的資料系統工程師羅伯特·卡里奧聯合為專案申請資助，但未被CERN正式批准。在他的個人筆記中[6]柏內茲-李列舉「一些使用超文字的領域」，並把百科全書列為第一項[7]。

HTML的首次公開描述出現於一個名為HTML Tags頁面存檔備份，存於網際網路檔案館的檔案中，由提姆·柏內茲-李於1991年底提及[8][9]。它描述18個元素，包括HTML初始的、相對簡單的設計。除了超連結標籤外，其他設計都深受CERN內部一個以標準通用標記語言（SGML）為基礎的檔案格式SGMLguid的影響。這些元素仍有11個存在於HTML 4中[10]。

柏內茲-李認為HTML是SGML的一個應用程式。1993年中期網際網路工程任務組（IETF）發布首個HTML規範的提案：「超文本標記語言（HTML）」網際網路草案頁面存檔備份，存於網際網路檔案館，由柏內茲-李與丹·康納利（英語：Dan Connolly (computer scientist)）撰寫。其中包括一個SGML文件類型定義來定義語法[11]。草案於6個月後過期，不過值得注意的是其對NCSA Mosaic瀏覽器嵌入線上圖像的自訂標籤的認可，這反映IETF把標準立足於成功原型的理念[12]。同樣，戴夫·拉格特（英語：Dave Raggett）在1993年末提出的與之競爭的網際網路草案「HTML+（超文字標記格式）」建議規範已經實現的功能，如表格與填寫表單[13]。

在HTML和HTML+的草案於1994年初到期後，IETF建立一個HTML工作群組，並在1995年完成"HTML 2.0"，這是第一個旨在成為對其後續實現標準的依據的HTML規範[14]。

在IETF的主導下，HTML標準的進一步發展因競爭利益而遭受停滯。自1996年起，HTML規範一直由全球資訊網協會（W3C）維護，並由商業軟體廠商出資[15]。不過在2000年，HTML也成為國際標準（ISO/ IEC15445：2000）。HTML 4.01於1999年末發布，進一步的勘誤版本於2001年發布。2004年，網頁超文字應用技術工作小組（WHATWG）開始開發HTML5，並在2008年與W3C共同提出，2014年10月28日完成標準化[16]。

XHTML是使用XML 1.0覆寫自HTML 4.01的獨立語言。它不再被作為單獨標準開發。

HTML標記包含標籤（及其屬性）、基於字元的資料類型、字元參照和實體參照等幾個關鍵部分。HTML標籤是最常見的，通常成對出現，比如<h1>與</h1>。這些成對出現的標籤中，第一個標籤是開始標籤，第二個標籤是結束標籤。兩個標籤之間為元素的內容，有些標籤沒有內容，為空元素，如<img>。

HTML另一個重要組成部分為文件類型聲明（英語：document type declaration），這會觸發標準模式彩現。

以下是一個經典的Hello World程式的例子：

<html>和</html>之間的文字描述網頁，<body>和</body>之間的文字為可視頁面內容。標記文字<title>This is a title</title>定義了瀏覽器的頁面標題。

文件標記類型<!DOCTYPE html>用於HTML5。 如果未進行聲明，瀏覽器會使用「怪異模式」進行彩現。[55]

HTML文件由巢狀的HTML元素構成。它們用HTML標籤表示，包含於尖括號中，如<p>[56]

在一般情況下，一個元素由一對標籤表示：「開始標籤」<p>與「結束標籤」</p>。元素如果含有文字內容，就被放置在這些標籤之間。

在開始與結束標籤之間也可以封裝另外的標籤，包括標籤與文字的混合。這些巢狀元素是父元素的子元素。

開始標籤也可包含標籤屬性。這些屬性有諸如標識文件區段、將樣式資訊繫結到文件演示和為一些如<img>等的標籤嵌入圖像、參照圖像來源等作用。

一些元素如換行符<br>，不允許嵌入任何內容，無論是文字或其他標籤。這些元素只需一個單一的空標籤（類似於一個開始標籤），無需結束標籤。

許多標籤是可選的，尤其是那些很常用的段落元素<p>的閉合端標籤。HTML瀏覽器或其他媒介可以從上下文辨識出元素的閉合端以及由HTML標準所定義的結構規則。這些規則非常複雜，不是大多數HTML編碼人員可以完全理解的。

因此，一個HTML元素的一般形式為：<tag attribute1="value1" attribute2="value2">''content''</tag>。一些HTML元素被定義為空元素，其形式為<tag attribute1="value1" attribute2="value2">。空元素不能封裝任何內容。例如<br>標籤或行內標籤<img>。一個HTML元素的名稱即為標籤使用的名稱。注意，結束標籤的名稱前面有一個斜槓「/」，空元素不需要也不允許結束標籤。如果元素屬性未標明，則使用其預設值。

HTML文件的頁首：<head>...</head>。標題被包含在頭部，例如：

標題：HTML標題由<h1>到<h6>六個標籤構成，字型由大到小遞減：


段落：
換行：<br>。<br>與<p>之間的差異是br換行但不改變頁面的語意結構，而p部分的頁面成段。

連結：使用<a>標籤來建立連結。href屬性包含連結的URL位址。

注釋：

 注釋有助於理解標記，但它不會在網頁上顯示。

HTML中存在以下幾種類型的標記元素：

大多數元素的屬性以「名稱-值」的形式成對出現，由「=」分離並寫在開始標籤元素名之後。值一般由單引號或雙引號包圍，有些值的內容包含特定字元，在HTML中可以去掉引號（XHTML不行）[58][59]。不加引號的屬性值被認為是不安全的[60]。有些屬性無需成對出現，僅存在於開始標籤中即可影響元素[8]，如img 元素的ismap 屬性[61]。

許多元素存在一些共通的屬性：

縮寫元素abbr可用於說明一些屬性：

這個例子顯示為HTML； 在大多數瀏覽器中，游標指向縮寫時會顯示標題文字「超文本標記語言」。

大多數元素採用與語言相關的屬性dir 來指定文字方向，如 "rtl"採用從右到左的文字，比如阿拉伯語、波斯語以及希伯來語[62]。

在4.0版本中，HTML定義了一系列共252個字元實體參照和1,114,050個字元值參考。二者都支援單個字元透過簡單的標記寫入。文字字元與其對應的標記彩現的效果相同。

用這種方式「跳脫」字元的能力允許字元<與&（當分別被寫作&lt;和&amp;時）被理解為字元資料而不是標記。例如<通常為標籤的開頭，&通常為字元實體參照與數字字元參照的開頭；&amp;或&#x26;或&#38;將&作為元素的內容或屬性的值。雙引號字元"在不被用於屬性值的標示時必須跳脫為&quot;或&#x22;或&#34;；相等地，當於單引號字元'不被用於屬性值的標示時，也必須跳脫為&#x27;或&#39;（或HTML5與XHTML文件中的&apos;[63][64]）。

如果文件作者忽略了跳脫這樣的字元，一些瀏覽器會嘗試透過上下文猜測他們的意圖。如果結果仍為無效標記，這會使其他瀏覽器或使用者代理難以存取到該文件，並使它們嘗試使用搜尋和索引來解析該文件。

那些難以輸入或不在該文件字元編碼中的字元也可透過跳脫來實現。例如通常只在西歐或南美的鍵盤出現的重音符e（é），可以在HTML文件中用作實體參照&eacute; 或數字參照&#xE9;或&#233;。 諸如UTF-8的Unicode字元編碼與所有的現代瀏覽器相容並允許直接存取全球書寫系統幾乎所有的字元 [65]。

HTML為元素內容定義了多種資料類型，如指令碼資料、樣式表資料以及許多屬性值的類型，包括ID、名稱、URI、數字長度單位、語言、媒體描述符顏色、字元編碼、日期和時間等等。所有這些資料類型都是字元資料的特殊化。

HTML文件需要以文件類型聲明（英語：document type declaration）（英語非正式說法「doctype」）開頭。在瀏覽器中，文件類型聲明有助於確定彩現模式——特別是是否使用怪異模式。

文件類型聲明的初衷是透過基於文件類型定義（DTD）的SGML工具來解析並驗證HTML文件。

HTML5未定義DTD，所以在HTML5中文件類型聲明更為簡短：[66]

HTML 4文件類型聲明舉例：

該聲明參照HTML 4.01「嚴格」版的DTD。基於SGML的驗證器可讀取DTD，正確解析這些文件並執行驗證。在現代瀏覽器中，一個有效的文件類型啟用標準模式有別於怪異模式。

另外，HTML 4.01提供過渡型與框架集型的DTD。過渡型涵蓋最廣，它可整合當前以及老舊或「過時」的標籤，而嚴格型DTD排除了過時的標籤。框架集擁有所有構建框架所需的標籤以及過渡型的標籤。[67]

語意化HTML是一種編寫HTML的方式，它強調編碼資訊的含義在其格式（樣子）之上。HTML從創立之初就包括語意化標記[68]，但也包括標識性標記如<font>、<i>和<center>標籤。也存在一些語意上中立的span與div標籤。自1990年代末CSS開始應用於大多數瀏覽器，網頁製作者就被鼓勵使用CSS以便呈現與內容分離[69]。

在2001年一次對語意網的討論中，提姆·柏內茲-李等人給出了一種的方法，使智慧型軟體「代理人」可能有一天會自動抓取網頁進行尋找、過濾並將之前不相關的聯絡起來[70]。這種代理甚至在現在也不普遍，但一些Web 2.0、混搭和價格比較網站的想法可能會結束。這些網頁應用程式的混合與柏內茲-李的語意代理人的之間主要區別基於以下事實：當前的聚合與資訊混合通常由網頁開發者設計，他們早已知道網路位置和他們希望混搭、比較與結合的特定資料的API語意。

網頁代理的一個重要類型是網路爬蟲或搜尋引擎蜘蛛。這些軟體代理依賴於它們發現的網頁的語意解析度，因為它們一天要使用各種技術與演算法來讀取和索引數百萬個網頁並給網頁使用者提供搜尋工具，沒有這些全球資訊網的有效性就會大大降低。

為使搜尋引擎蜘蛛評估它們在HTML文件中發現的文字片段的重要性，也為那些建立標記等混合的人與更多的自動化代理工具，HTML中的語意結構需要廣泛一致地應用從而將文字的含義呈現給瀏覽者。[71]

表示性標記在當前的HTML和XHTML推薦中不被鼓勵使用。舊版本HTML中的大多數表示功能不再被允許使用，因為它們導致可存取性變差、站點維護成本變高和文件大小變大。[72]

好的語意化HTML也改善了網頁文件的可存取性（參見網頁內容無障礙指南（英語：Web Content Accessibility Guidelines））。例如，當螢幕閱讀器或音訊瀏覽器可以正確判定一個文件的結構時，視覺障礙使用者不會再因閱讀重複或無關的資訊而浪費時間。

HTML文件分發的方法和其他電腦檔案相同。不過，它們最常透過網頁伺服器的超文字傳輸協定或電子郵件傳輸。

全球資訊網主要由從伺服器透過HTTP協定向瀏覽器傳送的HTML文件組成。但是，HTTP也可以被用於傳輸HTML之外的資料，例如圖像、聲音和其他內容。為使瀏覽器了解如何處理接收到的文件，在傳輸文件時必須同時傳遞檔案類型。這種元資料包含MIME類型（對於HTML 4.01或更早版本是text/html，而對於XHTML 1.0或之後的版本是application/xhtml+xml），以及字元編碼（參見HTML字元編碼方式）。

在現在的瀏覽器中，和HTML文件一起傳送的MIME類型影響文件的解讀方式。和XHTML MIME類型一起傳送的文件被認為是良構的XML，而語法錯誤會導致瀏覽器無法呈現文件。完全相同的文件如果和HTML MIME類型一起傳送，則可能被正常顯示，因為瀏覽器對HTML的語法檢查更加鬆懈些。

W3C的推薦指出，遵循規定的推薦指引的XHTML 1.0文件可標記二者任一的MIME類型[73]。XHTML 1.1還指出，XHTML 1.1文件應[74]標有兩種MIME類型[75]。

大多數圖形電子郵件客戶端允許使用HTML的子集（經常界限不清）提供格式化和無法使用純文字的語意標記。這可能包括印刷資訊，如彩色標題、強調和參照文字、內嵌圖片和圖表等。許多這樣的客戶包含一個編寫HTML電子郵件訊息的圖形化使用者介面編輯器和一個用於顯示的彩現引擎。在郵件中使用HTML受到了一些相容性的批評，由於一些盲人或具有視覺障礙的人的存取問題，這種方式有利於偽裝的釣魚攻擊。因其訊息大小超過明文，所以它可混淆垃圾郵件過濾器。

最常用的電腦副檔名為.html，通用縮寫為.htm。它起源於某些早期作業系統與檔案系統，如DOS以及FAT資料結構的局限性，它將副檔名限制為3個字母[76]。

HTML應用程式（HTA；副檔名".hta"）是一個Microsoft Windows應用程式，它在瀏覽器中使用HTML和動態HTML提供應用程式圖形介面。正規HTML檔案被限制在瀏覽器的安全模型中，只能分別透過網頁伺服器和網頁物件與站點Cookie進行通信和操作。HTA作為完全受信任的應用程式執行，因此擁有更多的權限，如建立/編輯/刪除檔案與登錄檔項。因為它們在瀏覽器安全模式之外操作，所以HTA不能透過HTTP執行，必須下載（就像EXE檔案）並在本地檔案系統執行。

所見即所得編輯器使用圖形化使用者介面（GUI）顯示HTML文件，常常類似於文書處理器，所以使用者可以設計一切。編者面對的是文件，而不是代碼，所以作者並不需要太多的HTML知識。這種所見即所得的編輯模式一直受到詬病[77][78]，主要因為它生成的代碼品質不高；也有人主張將其改變至WYSIWYM模型（所見即所指）。




網頁抓取是一種從網頁上取得頁面內容的電腦軟體技術。通常透過軟體使用低階別的超文字傳輸協定模仿人類的正常存取。

網頁抓取和網頁索引極其相似，其中網頁索引指的是大多數搜尋引擎採用使用的機器人或網路爬蟲等技術。與此相反，網頁抓取更側重於轉換網路上非結構化資料（常見的是HTML格式）成為能在一個中央資料庫和電子試算表中儲存和分析的結構化資料。網頁抓取也涉及到網路自動化，它利用電腦軟體類比了人的瀏覽。網頁抓取的用途包括線上的價格比較，聯絡人抓取，氣象資料監測，網頁變化檢測，科研，混搭和Web資料整合。

網路抓取用於自動化取得全球資訊網上的資訊
在電腦編程中，資料驅動編程，是一種編程範式，在其中程式語句描述要匹配的資料，和對它需要做的處理，程式本身不定義選取資料的一序列檔案操作步驟[1]。資料驅動語言的標準例子是文字處理語言sed和AWK[1]，在其中資料是輸入流中的一序列的行，因而它們也叫面向行的語言，而模式匹配（英語：Pattern matching）主要通過正規表示式或行號來完成。

資料驅動編程類似於事件驅動編程，儘管它們典型的應用於不同領域，二者都被結構化為模式匹配和結果處理，並通常由主迴圈來實現。條件/動作模式也類似於面向切面編程，在這裡當到達一個連接點（英語：join point）（條件）時，執行一個切入點（英語：pointcut）（動作）。

https://homepage.cs.uri.edu/~thenry/resources/unix_art/ch09s01.html 頁面存檔備份，存於網際網路檔案館  "The important part is moving program logic away from hardwired control structures and into data."
網頁（英語：web page）是一個適用於全球資訊網和網頁瀏覽器的檔案，它存放在世界某個角落的某一部或一組電腦中，而這部電腦必須是與網際網路相連。網頁經由網址（URL）來辨識與存取，當我們在網頁瀏覽器輸入網址後，經過一段複雜而又快速的程式，網頁檔案會被傳送到使用者家的電腦，然後再通過瀏覽器解釋網頁的內容，再展示給使用者。是網路中的一「頁」，通常是HTML格式，但現今已經有愈來愈多、各色各樣的網頁格式和標準出現。網頁通常用圖像檔來提供圖畫。網頁要透過網頁瀏覽器來閱讀。

網頁通常有以下元素：

網頁的合成體稱為網站，一個網站的開始點稱為首頁。

建立網頁只需一個普通的文字編輯器，或特別的HTML編輯器即可。若要發布到全球資訊網，便須FTP程式上傳頁面到網站伺服器。也可用專門的工具軟體。

當要將網頁存入自己的電腦內，網頁瀏覽器通常提供以下的選擇：

有些網頁瀏覽器容許在列印網頁前預覽，並可選擇印底色與否，甚至放大、縮小。

Wordpress 網站架設教學
網際網路（英語：Internet）是指20世紀末期興起電腦網路與電腦網路之間所串連成的龐大網路系統。這些網路以一些標準的網路協定相連。它是由從地方到全球範圍內幾百萬個私人、學術界、企業和政府的網路所構成，透過電子，無線和光纖網路技術等等一系列廣泛的技術聯繫在一起。網際網路承載範圍廣泛的資訊資源和服務，例如相互關聯的超文字檔案，還有全球資訊網（WWW）的應用，電子郵件，通話，以及檔案分享服務。

網際網路的起源可以追溯到1960年代美國聯邦政府委託進行的一項研究，目的是建立容錯與電腦網路的通信[1]。網際網路的前身ARPANET最初在1980年代作為區域學術和軍事網路連接的骨幹。1980年代，NSFNET（英語：NSFNET）成為新的骨幹而得到資助，以及其他商業化擴展得到了私人資助，導致了全世界網路技術的發展，以及許多網路的合併[2]。到1990年代初，商業網路和企業之間的連接標誌著向現代網際網路的過渡[3]。儘管網際網路在1980年代被學術界廣泛使用，但商業化的服務和技術融入了現代每個人的生活。

網際網路並不等同全球資訊網，網際網路是指凡是能彼此通信的裝置組成的網路就叫網際網路，指利用TCP/IP通訊協定所建立的各種網路，是國際上最大的網際網路，也稱「國際網際網路」。全球資訊網是一個由許多互相連結的超文字組成的系統，透過網際網路存取。在此定義下，全球資訊網是網際網路的一項服務。不過多數民眾並不區分兩者，常常混用。

在20世紀50年代，通信研究者認識到需要允許在不同電腦使用者和通信網路之間進行常規的通信。這促使分散網路、排隊論和封包交換的研究。1960年，美國國防部高等研究計劃署（DARPA）出於冷戰考慮建立的ARPANET引發技術進步並使其成為網際網路發展的中心。ARPANET的發展始於兩個網路節點，由倫納德·克萊因羅克帶領的加利福尼亞大學洛杉磯分校的網路測量中心與加利福尼亞州門羅帕克斯坦福國際研究院（英語：SRI International）（SRI）道格拉斯·恩格爾巴特的NLS系統兩個節點之間連接。第三個節點是加利福尼亞大學聖塔芭芭拉分校，第四個節點是猶他大學。到1971年底，已經有15個節點連接到ARPANET[4][5]。1973年6月，挪威地震陣列所（NORSAR（英語：NORSAR））連接到ARPANET成為美國本土之外的第一個網路節點[6][7][8]。

1974年，羅伯特·卡恩和文頓·瑟夫提出TCP/IP，定義在電腦網路之間傳送報文的方法（他們在2004年也因此獲得圖靈獎[9][10]）。1986年，美國國家科學基金會建立了美國超級電腦中心與學術機構之間互聯基於TCP/IP技術的骨幹網路NSFNET（英語：NSFNET），速度由最初的56kbit/s，接著為T1（1.5Mbit/s），最後發展至T3（45Mbit/s）[11]。NSFNET於1988至1989年擴展到歐洲、澳洲、紐西蘭和日本的學術和研究組織[12][13][14][15]。商業網際網路服務提供商（ISP）於1989年在美國和澳洲成立[16]。ARPANET於1990年退役[17]。

1989年中期，MCI Mail和CompuServe與網際網路建立連接，並且向50萬大眾提供電子郵件服務[18]。1990年3月，康奈爾大學和歐洲核子研究中心（CERN）之間架設NSFNET和歐洲之間的第一條高速T1（1.5Mbit/s）連接[19]。六個月後，提姆·柏內茲-李編寫第一個網頁瀏覽器[20]。到1990年聖誕節，提姆·柏內茲-李建立運行全球資訊網所需的所有工具：超文字傳輸協定（HTTP）[21]、超文字標記語言（HTML）、第一個網頁瀏覽器、第一個網頁伺服器[22]和第一個網站[23]。到1995年，NSFNET退役時，網際網路在美國已完全商業化，從而解除最後的商業流量限制[24]。

網際網路的成功，可從「Internet」這個術語的大、小寫分化窺知一二。最初，網際網路一詞代表那些使用IP協定架設而成的網路，而今天，它已引申泛指各種類型的網路，不再侷限於IP網路。於是以小寫的網際網路（internet，開頭的「i」是小寫字母）為任何分離的實體網路之集合，這些網路以一組通用的協定相連，形成邏輯上的單一網路。而大寫的網際網路（Internet，開頭的「I」是大寫字母）專指前身為ARPANET，後使用IP協定將各種實體網路連結成此單一邏輯網路。大寫的網際網路是小寫網際網路的其中一種形式，反過來卻不然。[25]2002年起，有學者開始提議將「internet」一詞用小寫表示，理由是網際網路已經成為人類生活的一部分，失去專有的意義[26]；2016年，美聯社認為「網際網路」已和「電話」一樣成為一件一般的事物，不具有專屬商標的意義，於是開始在其格式手冊中規定「internet」和「web」一詞全部小寫，紐約時報也隨後跟進，[27][28]但同時亦有媒體提出不同意見[29]。

任何需要使用網際網路的電腦必須透過某種方式與網際網路進行連接。網際網路接入技術的發展非常迅速，頻寬由最初的14.4Kbps發展到目前的100Mbps甚至1Gbps頻寬，接入方式也由過去單一的電話撥號方式，發展成現在多樣的有線和無線接入方式，接入終端也開始朝向行動裝置發展。並且更新更快的接入方式仍在繼續地被研究和開發。

最頂層的是一些應用層協定，這些協定定義了一些用於通用應用的資料報結構，包括FTP及HTTP等。中間層是UDP協定和TCP協定，它們用於控制資料流的傳輸。UDP是一種不可靠的資料流傳輸協定，僅為網路層和應用層之間提供簡單的介面。而TCP協定則具有高的可靠性，透過為資料報加入額外資訊，並提供重發機制，它能夠保證資料不丟包、沒有冗餘包以及保證封包的順序。對於一些需要高可靠性的應用，可以選擇TCP協定；而相反，對於效能優先考慮的應用如串流媒體等，則可以選擇UDP協定。

最底層的是網際網路協定，是用於報文交換網路的一種面向資料的協定，這一協定定義了封包在網際傳送時的格式。目前使用最多的是IPv4版本，這一版本中用32位元定義IP位址，儘管位址總數達到43億，但是仍然不能滿足現今全球網路飛速發展的需求，因此IPv6版本應運而生。在IPv6版本中，IP位址共有128位元，「幾乎可以為地球上每一粒沙子分配一個IPv6位址」。IPv6目前並沒有普及，許多網際網路服務提供商並不支援IPv6協定的連接。但是，可以預見，將來在IPv6的幫助下，任何家用電器都有可能連入網際網路。

網際網路承載著眾多應用程式和服務，包括全球資訊網、社群媒體、電子郵件、行動應用程式、多人電子遊戲、網際網路通話、檔案分享和串流媒體服務等。提供這些服務的大多數伺服器代管於資料中心，並且透過高效能的內容傳遞網路存取。

全球資訊網是檔案、圖片、多媒體和其他資源的全球集合，在邏輯上透過超連結互相連接，並使用統一資源標誌符標識，統一資源標誌符提供了一個全球命名標識系統，象徵性地標識服務、網頁伺服器、資料庫以及提供的檔案和資源。超文字傳輸協定（HTTP）是全球資訊網的主要存取協定，全球資訊網的服務使用HTTP在軟體系統之間進行通訊和資料傳輸[30]。

全球資訊網瀏覽器軟體，例如︰微軟的Internet Explorer╱Edge、Mozilla Firefox、Opera、蘋果公司的Safari和Google Chrome，能讓使用者透過嵌入檔案的超連結在網頁與另一網頁之間導覽，這些檔案包括圖形、音效、文字、影片、多媒體和互動式內容，相較於印刷媒體、書籍、百科全書和傳統圖書館，使用者更容易和即時存取大量多樣的資訊，全球資訊網對於網際網路的普及發揮了至關重要的作用[31]。

電子郵件是網際網路上重要的通訊服務。這項類似於郵寄信件或備忘錄的方式發送電子文字訊息的概念已早於網際網路的誕生之前[32][33]。圖片、檔案和其他資料以電子郵件附件的形式發送。電子郵件可以發送多個電子郵件位址。

檔案分享是網際網路傳輸大量數據的一個例子，透過上傳至網站或檔案傳輸協定（FTP）伺服器上以供他人下載。除此之外，也可以置於共享位置或檔案伺服器供其他人使用。

經過多年的發展，網際網路已經在社會的各個層面為全人類提供了便利。但是隨之而來的不全是正面的影響，並影響著人們的正常生活。

惡意軟體是透過網際網路使用和散發的軟體，包括在人為協助下複製的電腦病毒，自我複製的電腦蠕蟲，阻斷服務攻擊軟體，勒索軟體，殭屍網路以及蒐集使用者活動和鍵入資訊的間諜軟體，通常這些行為足以構成網路犯罪。

在美國，由美國國家安全局（NSA）為首自2007年起開始實施的最高機密等級電子監聽計劃，該計劃可監聽美國本土以外的使用者、或任何與國外通訊的美國公民。參與此計劃的前中情局（CIA）雇員史諾登在2013年5月將檔案複製後前往香港並將此計劃公諸於世，然後於2013年6月6日，在英國《衛報》和美國《華盛頓郵報》公開[34]。

網路內容審查是一種對網路承載的內容進行審查，並對部分內容進行過濾、刪除、關閉等行為，內容審查通常伴隨對相關人員與組織的行政處理。網路審查主要針對危害國家安全、侵犯著作權與個人隱私、透過網路進行違法活動以及對不道德的行為進行宣傳和教唆等行為。許多國家都有相關立法，並且在政府設有相關部門進行監視和管理。然而對網路內容的審查在一定程度上限制了言論的自由，在何種程度上、採取何種手段進行網路審查一直是爭議的話題。

在某些國家，如中華人民共和國、沙烏地阿拉伯政府認為部分敏感資訊（政治、宗教等）不能散布到國內民眾中，所以這些國家政府利用資訊科技過濾、封鎖了一些包含敏感資訊的國內、國外網站，以防止民眾存取到這些網站[35]。個別國家，如朝鮮，則完全禁止普通民眾存取境外網站，民眾只能存取由政府開設的國家區域網路[36]。

截至2020年6月，全球約有48億網友，網際網路普及率是62%。
[37]
[38]

截至2011年，網際網路普及率最高的國家或城市為冰島（97.8%）；第二至第五位分別是挪威（97.2%）、瑞典（92.9%），福克蘭群島（92.4%）及盧森堡（91.4%）。[39]

2006年時，經濟合作發展組織調查顯示截至2005年底，寬頻上網（Broadband）普及率的前五名分別為冰島（26.7%）、韓國（25.4%）、荷蘭（25.3%）、丹麥（25.0%），以及瑞士（23.1%）。而美國在所有工業化國家中排名第12。

根據中國互聯網絡信息中心在2019年2月發表的《第43次中國網際網路發展狀況統計報告》，截至2018年12月，中國的網友數量達8.29億人，為世界首位，網際網路普及率達到59.6%，高於世界平均水平，但仍遠落後於網際網路已開發國家。[40]
伺服器（英語：server）指：

伺服器通常以網路作為媒介，既可以通過內部網路對內提供服務，也可以通過網際網路對外提供服務。伺服器的最大特點就是其強大的運算能力，使其能在短時間內完成大量工作，並為大量使用者提供服務。20世紀90年代之後，隨著數據機技術的發展，網際網路由窄頻的電話撥接，升級成為寬頻網路，這代表著以資訊高速公路為象徵的網路新時代來臨。網際網路普及同時改變了電腦使用者習慣，更大大普及網路聯絡傳訊的方式，從文字到圖片，再到影片，伺服器所能完成的工作也越來越複雜；而雲端計算、巨量資料時代造就了各種新型態行業，如網路商店、網路電商、網路拍賣、網路銷售、網路遊戲、網站設計及架設、部落格，以及越來越普遍性的雲端資料庫或備份庫。標準伺服器（server）及檔案伺服器（NAS）的普及正在時時優化及改變現有人類的生活。

有時，這兩種定義會引起混淆，如網頁伺服器。它可能是指用於網站的電腦，也可能是指像Apache這樣的軟體，執行在這樣的電腦上以管理網頁組件和回應網頁瀏覽器的請求。
伺服器的構成包括中央處理器、硬碟、記憶體等，和通用的電腦架構類似，但是由於需要提供高可靠的服務，因此在處理能力、穩定性、可靠性、安全性、可延伸性、可管理性等方面要求較高。
在網路環境下，根據伺服器提供的服務類型不同，分為檔案伺服器，資料庫伺服器，應用程式伺服器，Web伺服器等。

伺服器作為硬體來說，通常是指那些具有較高計算能力，能夠提供給多個使用者使用的電腦。伺服器與PC機的不同點很多，例如PC機在一個時刻通常只為一個使用者服務。伺服器與主機不同，主機是通過終端給使用者使用的，伺服器是通過網路給客戶端使用者使用的，所以除了要擁有終端裝置，還要利用網路才能使用伺服器電腦，但使用者連上線後就能使用伺服器上的特定服務了。

和普通的個人電腦相比， 伺服器需要連續的工作在7×24小時環境。這就意味著伺服器需要更多的穩定性技術RAS，比如支援使用ECC記憶體。

根據不同的計算能力，伺服器又分為工作群組級伺服器，部門級伺服器和企業級伺服器。伺服器作業系統是指執行在伺服器硬體上的作業系統。伺服器作業系統需要管理和充分利用伺服器硬體的計算能力並提供給伺服器硬體上的軟體使用。

現在，市場上有很多伺服器作業系統。類Unix作業系統是Unix的後代，大多為作伺服器平台
設計。常見的此類類Unix作業系統有各種Linux發行版（如紅帽企業Linux、SUSE）、AIX、IRIX、Solaris、BSD（如OpenBSD、NetBSD）、和SCO OpenServer。微軟也推出了Windows Server，如Windows NT 4.0 Server、Windows 2000 Server、Windows Server 2003、Windows Server 2008、Windows Server 2008 R2、Windows Server 2012、Windows Server 2012 R2、Windows Server 2016、Windows Server 2019[1]。

伺服器軟體的定義如前面所述，伺服器軟體工作在客戶端-伺服器或瀏覽器-伺服器的方式，有很多形式的伺服器，常用的包括：

伺服器常見的外型有四種：塔式伺服器、機架伺服器（rack）、刀鋒伺服器（blade server）、機櫃式。

伺服器常遭到駭客攻擊，所以伺服器都要不定時的去做檢查。

若無有效防火牆管理，或是未做系統漏洞更新，伺服器更易成為攻擊者的目標。工作場所的伺服器是不法者所特別注視的目標。
超文本傳輸協定（英語：HyperText Transfer Protocol，縮寫：HTTP）是一種用於分佈式、協作式和超媒體訊息系統的應用層協定[1]。HTTP是全球資訊網的數據通信的基礎。

設計HTTP最初的目的是為了提供一種發布和接收HTML頁面的方法。透過HTTP或者HTTPS協定請求的資源由統一資源識別碼（Uniform Resource Identifiers，URI）來標識。

HTTP的發展是由提姆·柏內茲-李於1989年在歐洲核子研究組織（CERN）所發起。HTTP的標準制定由全球資訊網協會（World Wide Web Consortium，W3C）和網際網路工程任務組（Internet Engineering Task Force，IETF）進行協調，最終發布了一系列的RFC，其中最著名的是1999年6月公布的 RFC 2616，定義了HTTP協定中現今廣泛使用的一個版本——HTTP 1.1。

2014年12月，網際網路工程任務組（IETF）的Hypertext Transfer Protocol Bis（httpbis）工作小組將HTTP/2標準提議遞交至IESG（英語：Internet Engineering Steering Group）進行討論[2]，於2015年2月17日被批准。[3] HTTP/2標準於2015年5月以RFC 7540正式發表，取代HTTP 1.1成為HTTP的實作標準。[4]

HTTP是一個客戶端（使用者）和伺服器端（網站）之間請求和應答的標準，通常使用TCP協定。透過使用網頁瀏覽器、網路爬蟲或者其它的工具，客戶端發起一個HTTP請求到伺服器上指定埠（預設埠為80）。我們稱這個客戶端為使用者代理程式（user agent）。應答的伺服器上儲存著一些資源，比如HTML檔案和圖像。我們稱這個應答伺服器為源伺服器（origin server）。在使用者代理和源伺服器中間可能存在多個「中間層」，比如代理伺服器、閘道器或者隧道（tunnel）。

儘管TCP/IP協定是網際網路上最流行的應用，但是在HTTP協定中並沒有規定它必須使用或它支援的層。事實上HTTP可以在任何網際網路協定或其他網路上實作。HTTP假定其下層協定提供可靠的傳輸。因此，任何能夠提供這種保證的協定都可以被其使用，所以其在TCP/IP協定族使用TCP作為其傳輸層。

通常，由HTTP客戶端發起一個請求，建立一個到伺服器指定埠（預設是80埠）的TCP連線。HTTP伺服器則在那個埠監聽客戶端的請求。一旦收到請求，伺服器會向客戶端返回一個狀態，比如"HTTP/1.1 200 OK"，以及返回的內容，如請求的檔案、錯誤訊息、或者其它訊息。

HTTP/1.1協定中共定義了八種方法（也叫「動作」）來以不同方式操作指定的資源：

方法名稱是區分大小寫的。當某個請求所針對的資源不支援對應的請求方法的時候，伺服器應當返回狀態碼405（Method Not Allowed），當伺服器不認識或者不支援對應的請求方法的時候，應當返回狀態碼501（Not Implemented）。

HTTP伺服器至少應該實作GET和HEAD方法，其他方法都是可選的。當然，所有的方法支援的實作都應當符合下述的方法各自的語意定義。此外，除了上述方法，特定的HTTP伺服器還能夠擴充自訂的方法。例如：

對於GET和HEAD方法而言，除了進行取得資源訊息外，這些請求不應當再有其他意義。也就是說，這些方法應當被認為是「安全的」。
客戶端可能會使用其他「非安全」方法，例如POST，PUT及DELETE，應該以特殊的方式（通常是按鈕而不是超連結）告知客戶可能的後果（例如一個按鈕控制的資金交易），或請求的操作可能是不安全的（例如某個檔案將被上傳或刪除）。

但是，不能想當然地認為伺服器在處理某個GET請求時不會產生任何副作用。事實上，很多動態資源會把這作為其特性。這裡重要的區別在於使用者並沒有請求這一副作用，因此不應由使用者為這些副作用承擔責任。


假如在不考慮諸如錯誤或者過期等問題的情況下，若干次請求的副作用與單次請求相同或者根本沒有副作用，那麼這些請求方法就能夠被視作「冪等(idempotence)」的。GET，HEAD，PUT和DELETE方法都有這樣的冪等屬性，同樣由於根據協定，OPTIONS，TRACE都不應有副作用，因此也理所當然也是冪等的。

假如一個由若干請求組成的請求序列產生的結果，在重複執行這個請求序列或者其中任何一個或多個請求後仍沒有發生變化，則這個請求序列便是「冪等」的。但是，可能出現一個由若干請求組成的請求序列是「非冪等」的，即使這個請求序列中所有執行的請求方法都是冪等的。例如，這個請求序列的結果依賴於某個會在下次執行這個序列的過程中被修改的變數。

超文本傳輸協定已經演化出了很多版本，它們中的大部分都是向下相容的。在 RFC 2145 中描述了HTTP版本號的用法。客戶端在請求的開始告訴伺服器它採用的協定版本號，而後者則在回應中採用相同或者更早的協定版本。

已過時。只接受GET一種請求方法，沒有在通訊中指定版本號，且不支援請求頭。由於該版本不支援POST方法，因此客戶端無法向伺服器傳遞太多訊息。

這是第一個在通訊中指定版本號的HTTP協定版本。

預設採用持續連接（Connection: keep-alive），能很好地配合代理伺服器工作。還支援以管道方式在同時傳送多個請求，以便降低線路負載，提高傳輸速度。

HTTP/1.1相較於HTTP/1.0協定的區別主要體現在：

目前版本，於2015年5月作為網際網路標準正式發布。[5]

所有HTTP回應的第一行都是狀態行，依次是當前HTTP版本號，3位數字組成的狀態代碼，以及描述狀態的短語，彼此由空格分隔。

狀態代碼的第一個數字代表當前回應的類型：

雖然 RFC 2616 中已經推薦了描述狀態的短語，例如"200 OK"，"404 Not Found"，但是WEB開發者仍然能夠自行決定採用何種短語，用以顯示在地化的狀態描述或者自訂訊息。



在HTTP 0.9和1.0中，TCP連線在每一次請求/回應對之後關閉。在HTTP 1.1中，引入了保持連線的機制，一個連接可以重複在多個請求/回應使用。持續連線的方式可以大大減少等待時間，因為在發出第一個請求後，雙方不需要重新執行TCP交握程式。

HTTP 1.1還改進了HTTP 1.0的頻寬。 例如，HTTP 1.1引入了分塊傳輸編碼，以允許傳遞內容可以在持續連線上被串流傳輸而不必使用到緩衝器。HTTP管道允許客戶端在收到每個回應之前發送多個請求，進一步減少使用者感受到的滯後時間。協定的另一個補充是位元組服務，允許客戶端請求資源的某一部份，伺服器僅回應某資源的指明部分。

下面是一個HTTP客戶端與伺服器之間對談的例子，執行於www.google.com，埠80

發出的請求訊息（message request）包括以下幾個:

請求行和標題必須以<CR><LF>作為結尾。空行內必須只有<CR><LF>而無其他空格。在HTTP/1.1協定中，所有的請求頭，除Host外，都是可選的。

（末尾有一個空行。第一行指定方法、資源路徑、協定版本；第二行是在1.1版里必帶的一個header作用於指定主機）

（緊跟著一個空行，並且由HTML格式的文字組成了Google的首頁）

在HTTP1.0，單一TCP連線內僅執行一個「客戶端傳送請求—伺服器傳送應答」周期，之後釋放TCP連線。在HTTP1.1最佳化支援持續活躍連接：客戶端連續多次傳送請求、接收應答；批次多請求時，同一TCP連線在活躍（Keep-Live）間期內復用，避免重複TCP初始交握活動，減少網路負荷和回應周期。此外支援應答到達前繼續傳送請求（通常是兩個），稱為「流線化」（stream）。

Gopher是1990年代早期被HTTP取代的內容傳遞協定。SPDY是Google開發的HTTP的替代方案，它被新版本的HTTP協定HTTP/2所取代。
